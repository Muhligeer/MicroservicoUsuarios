name: Docker

on:
  schedule:
    - cron: '34 20 * * *'
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Set up Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login into GHCR (not on PRs)
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push image
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ./src/MicroservicoUsuarios
          file: ./src/MicroservicoUsuarios/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


      # Run integration tests with docker-compose
      - name: Run integration tests
        run: |
          echo "🚀 Subindo containers..."
          docker compose -f docker-compose.yml up -d
          docker compose ps
          
          echo "⏳ Aguardando API iniciar..."
          for i in {1..15}; do
            if curl -s http://localhost:8080/health > /dev/null; then
              echo "✅ API está respondendo!"
              break
            fi
            echo "Tentativa $i: API ainda não está pronta..."
            sleep 3
          done

          echo "📜 Logs da API:"
          docker logs microservico-usuarios-app

      # Sign the published Docker image
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
